def safeExtGet(prop, fallback) {
    rootProject.ext.has(prop) ? rootProject.ext.get(prop) : fallback
}

buildscript {
    if (project == rootProject) {
        repositories {
            google()
            mavenCentral()
        }
        dependencies {
            classpath 'com.android.tools.build:gradle:7.2.1'
        }
    }
}

apply plugin: 'com.android.library'

android {
    // Eğer bir namespace gerekiyorsa (AGP 8.0 ve üzeri için):
    namespace "com.sekizlipenguen.soulplayer"
    compileSdkVersion safeExtGet('compileSdkVersion', 33).toInteger() // Uygun bir compileSdkVersion kullanıyoruz
    defaultConfig {
        minSdkVersion safeExtGet('minSdkVersion', 21) // Minimum SDK sürümü
        targetSdkVersion safeExtGet('targetSdkVersion', 33) // Hedef SDK sürümü
        versionCode 1
        versionName "1.0"
    }
    lintOptions {
        abortOnError false
    }
}

repositories {
    mavenLocal()
    mavenCentral()
    maven {
        url "$rootDir/../node_modules/react-native/android" // React Native modülleri
    }
    maven {
        url "$rootDir/../node_modules/jsc-android/dist" // JavaScriptCore
    }
    google()
}

dependencies {
    implementation 'com.android.support:appcompat-v7:25.0.0'
    implementation 'com.android.support:mediarouter-v7:25.0.0'
    implementation 'com.google.android.gms:play-services-cast-framework:21.4.0'
    implementation 'com.facebook.react:react-native:+'
}

